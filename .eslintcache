[{"H:\\REACT\\Whatsapp-clone\\whatsappclone\\src\\index.js":"1","H:\\REACT\\Whatsapp-clone\\whatsappclone\\src\\App.js":"2","H:\\REACT\\Whatsapp-clone\\whatsappclone\\src\\reportWebVitals.js":"3","H:\\REACT\\Whatsapp-clone\\whatsappclone\\src\\Sidebar.js":"4","H:\\REACT\\Whatsapp-clone\\whatsappclone\\src\\SidebarChat.js":"5","H:\\REACT\\Whatsapp-clone\\whatsappclone\\src\\Chat.js":"6","H:\\REACT\\Whatsapp-clone\\whatsappclone\\src\\firebase.js":"7","H:\\REACT\\Whatsapp-clone\\whatsappclone\\src\\Login.js":"8","H:\\REACT\\Whatsapp-clone\\whatsappclone\\src\\StateProvider.js":"9","H:\\REACT\\Whatsapp-clone\\whatsappclone\\src\\reducer.js":"10","H:\\REACT\\Whatsapp-clone\\whatsappclone\\src\\SimpleMenu.js":"11","H:\\REACT\\Whatsapp-clone\\whatsappclone\\src\\GroupInfo.js":"12"},{"size":635,"mtime":1611924947225,"results":"13","hashOfConfig":"14"},{"size":957,"mtime":1612107817493,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":2399,"mtime":1612104343410,"results":"17","hashOfConfig":"14"},{"size":1617,"mtime":1612117771391,"results":"18","hashOfConfig":"14"},{"size":4081,"mtime":1612113391074,"results":"19","hashOfConfig":"14"},{"size":727,"mtime":1611918235587,"results":"20","hashOfConfig":"14"},{"size":1353,"mtime":1612027708320,"results":"21","hashOfConfig":"14"},{"size":375,"mtime":1612004813857,"results":"22","hashOfConfig":"14"},{"size":545,"mtime":1612077333335,"results":"23","hashOfConfig":"14"},{"size":1366,"mtime":1612083380899,"results":"24","hashOfConfig":"14"},{"size":3798,"mtime":1612113795692,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1ov902g",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"H:\\REACT\\Whatsapp-clone\\whatsappclone\\src\\index.js",[],["54","55"],"H:\\REACT\\Whatsapp-clone\\whatsappclone\\src\\App.js",["56"],"H:\\REACT\\Whatsapp-clone\\whatsappclone\\src\\reportWebVitals.js",[],"H:\\REACT\\Whatsapp-clone\\whatsappclone\\src\\Sidebar.js",["57","58"],"import React,{useState,useEffect} from \"react\";\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge'\r\nimport ChatIcon from '@material-ui/icons/Chat'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\r\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\r\nimport {Avatar,IconButton} from '@material-ui/core'\r\nimport SidebarChat from './SidebarChat'\r\nimport \"./Sidebar.css\";\r\nimport db from './firebase.js'\r\nimport { useStateValue } from './StateProvider';\r\nimport SimpleMenu from './SimpleMenu'\r\n\r\nfunction Sidebar() {\r\n    \r\n  \r\n    const [rooms, setRooms] = useState([])\r\n    const [{user},dispatch] = useStateValue();\r\n  \r\n    useEffect(() => {\r\n      const unsubscribe = db.collection('rooms')\r\n                                .onSnapshot( snapshot => (\r\n                                    \r\n                                  setRooms(snapshot.docs.map(doc => (\r\n                                        {\r\n                                            id: doc.id,\r\n                                            data: doc.data()\r\n                                        }\r\n                                    ) \r\n                                  ))\r\n                                ));\r\n\r\n                  return ()=>{\r\n                    unsubscribe();\r\n                  }\r\n    },[])\r\n  \r\n\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"sidebar\">\r\n      \r\n      <div className=\"sidebar__header\">\r\n\r\n          <Avatar src={user?.photoURL}/>\r\n\r\n          <div className=\"sidebar__headerRight\">\r\n                <IconButton>\r\n                  <DonutLargeIcon/>\r\n                </IconButton>\r\n                \r\n                <IconButton>\r\n                    <ChatIcon/>\r\n                </IconButton> \r\n                \r\n               \r\n                <SimpleMenu/>\r\n            \r\n    \r\n          </div>\r\n      </div>\r\n\r\n      <div className=\"sidebar__search\">\r\n\r\n        <div className=\"sidebar__searchContainer\">\r\n          <SearchOutlinedIcon/>\r\n          <input placeholder=\"Search/Start new Chat\" type=\"text\" />\r\n        </div>\r\n          \r\n      </div>\r\n\r\n\r\n      <div className=\"sidebar__chats\">\r\n        <SidebarChat addNewChat/> \r\n        {rooms.map((room) => (\r\n          <SidebarChat\r\n            key={room.id}\r\n            id={room.id}\r\n            name={room.data.name}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","H:\\REACT\\Whatsapp-clone\\whatsappclone\\src\\SidebarChat.js",[],"H:\\REACT\\Whatsapp-clone\\whatsappclone\\src\\Chat.js",["59"],"import React,{useState,useEffect} from 'react'\r\nimport {Avatar,IconButton} from '@material-ui/core'\r\nimport './Chat.css'\r\nimport { AttachFile, MoreVert, SearchOutlined } from '@material-ui/icons';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport NavigationOutlinedIcon from '@material-ui/icons/NavigationOutlined';\r\nimport { Button } from '@material-ui/core';\r\nimport {useParams} from 'react-router-dom'\r\nimport db from './firebase.js'\r\nimport { useStateValue } from './StateProvider'\r\nimport firebase from 'firebase'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\n\r\nfunction Chat() {\r\n\r\n    const [input,setInput] = useState(\"\")\r\n    const {roomId} = useParams();\r\n    const [roomName,setRoomName] = useState(\"\")\r\n    const [messages, setMessages] = useState([])\r\n    const [{user}, dispatch] = useStateValue()\r\n    const [createdAt,setCreatedAt] = useState(\"\")\r\n\r\n    useEffect(()=>{\r\n        if(roomId){\r\n            db.collection('rooms').doc(roomId).onSnapshot(snapshot => {\r\n              setRoomName(snapshot.data().name);\r\n              setCreatedAt( new Date(snapshot.data().createdAt.toDate()).toString())\r\n          });\r\n          \r\n          db.collection('rooms').doc(roomId).collection(\"messages\").orderBy(\"timestamp\",\"asc\").onSnapshot(snapshot => {\r\n            setMessages(snapshot.docs.map(doc => doc.data()))\r\n        });\r\n          \r\n        }\r\n    },[roomId])\r\n\r\n\r\n    console.log(createdAt)\r\n\r\n    const sendMessage = (e) =>{\r\n      e.preventDefault();\r\n      db.collection('rooms').doc(roomId).collection('messages').add({\r\n        message: input,\r\n        name: user.displayName,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    })\r\n\r\n      setInput(\"\")\r\n    }\r\n\r\n\r\n \r\n\r\n    return (\r\n      <div className=\"chat\">\r\n\r\n\r\n        <div className=\"chat__header\">\r\n          <Avatar src={ `https://joeschmoe.io/api/v1/${roomName}`}/>\r\n          <div className=\"chat__headerInfo\">\r\n        <NavLink exact to={{\r\n            pathname:`/rooms/${roomId}/groupInfo`,\r\n            state: {roomId,roomName,createdAt}  \r\n          }}>\r\n          <h3 className='chat-room-name'>{roomName}</h3>\r\n                    <p className='chat-room-last-seen'>\r\n                        Last seen {\" \"}\r\n                        {( messages.length !== 0 )?( \r\n                          new Date(messages[messages.length - 1]?.timestamp?.toDate()).toLocaleTimeString()\r\n                          ):(\r\n                            \".....\"\r\n                            )\r\n                          }\r\n                    </p>\r\n            </NavLink>\r\n          </div>\r\n\r\n          <div className=\"chat__headerRight\">\r\n            <IconButton>\r\n              <SearchOutlined />\r\n            </IconButton>\r\n\r\n            <IconButton>\r\n              <AttachFile />\r\n            </IconButton>\r\n\r\n            <IconButton>\r\n              <MoreVert />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"chat__body\">\r\n\r\n          {messages.map(message=>(\r\n              \r\n              <p className={`chat__message ${ message.name === user?.displayName && 'chat__reciever'}`}>\r\n               <span className=\"chat__name\">\r\n                   {message.name}\r\n               </span>\r\n              {message.message}\r\n               <span className=\"chat__timeStamp\">\r\n                   {new Date(message.timestamp?.toDate()).toLocaleTimeString()}\r\n               </span>\r\n               </p>\r\n\r\n          ))}\r\n           \r\n        </div>\r\n\r\n        <div className=\"chat__footer\">\r\n                <InsertEmoticonIcon />\r\n                <form>\r\n                    <input value={input} onChange={(e) => setInput(e.target.value)} type=\"text\" placeholder=\"Type a message\"/>\r\n                    <Button type=\"submit\"  onClick={sendMessage}>\r\n                        <NavigationOutlinedIcon className=\"submitBtn\" />\r\n                    </Button>\r\n                </form>\r\n                <MicIcon/>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Chat\r\n","H:\\REACT\\Whatsapp-clone\\whatsappclone\\src\\firebase.js",[],"H:\\REACT\\Whatsapp-clone\\whatsappclone\\src\\Login.js",["60"],"import React,{useEffect} from 'react'\r\nimport './Login.css'\r\nimport { Button } from '@material-ui/core';\r\nimport {auth,provider} from './firebase';\r\nimport { actionTypes } from './reducer';\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction Login() {\r\n\r\n    const [{},dispatch] = useStateValue();\r\n    \r\n    useEffect(()=>{\r\n        auth.onAuthStateChanged((user) => {\r\n            if (user) {\r\n              dispatch({type:actionTypes.SET_USER,user:user})\r\n            }\r\n        })\r\n    },[dispatch])\r\n    \r\n\r\n    const signIn = () => {\r\n           auth.signInWithPopup(provider)\r\n            .then((result) => {\r\n                console.log(result)\r\n                dispatch({\r\n                    type: actionTypes.SET_USER,\r\n                    user: result.user,\r\n                })\r\n            })\r\n            .catch((error) => alert(error.message))\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login_container\">\r\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/6/6b/WhatsApp.svg\" alt=\"\"/> \r\n                <div className=\"login_text\">\r\n                    <h1>Sign in to Whatsapp</h1>\r\n                </div>\r\n                <Button type=\"submit\" onClick={signIn}>Sign in With Google</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","H:\\REACT\\Whatsapp-clone\\whatsappclone\\src\\StateProvider.js",[],"H:\\REACT\\Whatsapp-clone\\whatsappclone\\src\\reducer.js",[],"H:\\REACT\\Whatsapp-clone\\whatsappclone\\src\\SimpleMenu.js",["61"],"H:\\REACT\\Whatsapp-clone\\whatsappclone\\src\\GroupInfo.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":12,"column":18,"nodeType":"68","messageId":"69","endLine":12,"endColumn":26},{"ruleId":"66","severity":1,"message":"70","line":4,"column":8,"nodeType":"68","messageId":"69","endLine":4,"endColumn":20},{"ruleId":"66","severity":1,"message":"67","line":17,"column":19,"nodeType":"68","messageId":"69","endLine":17,"endColumn":27},{"ruleId":"66","severity":1,"message":"67","line":22,"column":20,"nodeType":"68","messageId":"69","endLine":22,"endColumn":28},{"ruleId":"71","severity":1,"message":"72","line":10,"column":12,"nodeType":"73","messageId":"74","endLine":10,"endColumn":14},{"ruleId":"66","severity":1,"message":"75","line":12,"column":11,"nodeType":"68","messageId":"69","endLine":12,"endColumn":15},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","'MoreVertIcon' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]